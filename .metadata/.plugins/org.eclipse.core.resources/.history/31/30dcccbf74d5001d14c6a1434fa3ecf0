#pragma once

#include "stm32h7xx_hal.h"
#include <vector>

using namespace std;

class AnalogIn {

private:
	ADC_HandleTypeDef* adc;
	TIM_HandleTypeDef* timer;
	uint16_t pin;

	void start(){

	}

public:
	double voltage;
	static vector<AnalogIn*> all_analog_ins;
	static uint16_t adc1_data[16];

	AnalogIn(ADC_HandleTypeDef* adc) : adc(adc) {
		AnalogIn::all_analog_ins.push_back(this);
	}

	double update(uint16_t value) {
		return value / 65535.0 * 3.3;
	}

	static void start_all_analog_ins(){
		  HAL_TIM_Base_Start(&htim6);
		  if(HAL_ADC_Start_DMA(&hadc1,(uint32_t*) AnalogIn::adc1_data, AnalogIn::all_analog_ins.size()) != HAL_OK)
		 	  Error_Handler();
	}

};
